@use "sass:meta";

// 1. Variantes
#ex1 {
  @mixin btn($background, $color: #fff, $radius: 0.5rem) {
    color: $color;
    border: none;
    background: $background;
    border-radius: $radius;
    padding: 0.5rem 1rem;
    font-weight: 500;
    cursor: pointer;
  }

  .btn-primary {
    @include btn(greenyellow);
  }
  .btn-secondary {
    @include btn(darkkhaki, purple, 0.25rem);
  }
}

// 2. @content
#ex2 {
  @mixin media($min: null, $max: null) {
    @if $min and $max {
      @media (min-width: #{$min}) and (max-width: #{$max}) {
        @content;
      }
    } @else if $min {
      @media (min-width: #{$min}) {
        @content;
      }
    } @else if $max {
      @media (max-width: #{$max}) {
        @content;
      }
    } @else {
      @content;
    }
  }

  .card {
    background: beige;
    border: 1px solid #9e9b9b;
    padding: 1rem;
    width: 100%;
    text-align: center;
    border-radius: 0.5rem;
    @include media($min: 768px) {
      width: 40%;
      margin: auto;
    }
  }
}

// 3. Múltiplos argumentos
#ex3 {
  .demo-area {
    display: flex;
    gap: 1rem;
  }
  
  @mixin make-card(
    $color,
    $background-color,
    $border-color,
    $background-color-hover,
    $border-color-hover,
    $shadows...
  ) {
    width: 100px;
    padding: 1rem;
    color: $color;
    text-align: center;
    box-shadow: $shadows;
    border-radius: 0.5rem;
    background: $background-color;
    border: 1px solid $border-color;

    &:hover,
    &:focus {
      background-color: $background-color-hover;
      border-color: $border-color-hover;
    }
  }

  .card-1 {
    @include make-card(#ffffff, #66314d, #ededed, #ba0060, #dbdbdb, rgba(0, 0, 0, 0.381) 0px 15px 25px, rgba(0, 0, 0, 0.05) 0px 5px 10px);
  }

  .card-2 {
    @include make-card(
      #ffffff, #67c272, #ededed, #517d44, #dbdbdb, 
      rgba(240, 46, 170, 0.4) 5px 5px, rgba(240, 46, 170, 0.3) 10px 10px, rgba(240, 46, 170, 0.2) 15px 15px, rgba(240, 46, 170, 0.1) 20px 20px, rgba(240, 46, 170, 0.05) 25px 25px
    );
  }

  $make-card: (
    color:               #000000,
    background-color:    #d3d3d3,
    border-color:        #666666,
    background-hover:    #e6e6e6,
    border-color-hover:  #888888,
    shadows:             rgba(0, 0, 0, 0.381) 0px 15px 25px, rgba(0, 0, 0, 0.05) 0px 5px 10px
  );
}

// 4. Transform com prefixos
@mixin transform($t) {
  -webkit-transform: $t;
  -ms-transform: $t;
  transform: $t;
}

.modal {
  background: white;
  padding: 1.5rem;
  border-radius: 0.5rem;
  width: 200px;
  text-align: center;
  margin: 1rem auto;
  @include transform(translateY(0));
  &:hover {
    @include transform(translateY(-10px));
  }
}

// 5. Catálogo de tamanhos
$sizes: (
  sm: 0.8rem,
  md: 1rem,
  lg: 1.4rem,
);

@mixin text-size($key) {
  $val: map-get($sizes, $key);
  @if $val == null {
    @error "Tamanho `#{$key}` inválido.";
  }
  font-size: $val;
}

.text-sm {
  @include text-size(sm);
}
.text-md {
  @include text-size(md);
}
.text-lg {
  @include text-size(lg);
}

// 6. @use (simulação)
@mixin ring($c, $w: 2px) {
  box-shadow: 0 0 0 $w $c;
}

// .btn-focus {
//   @include btn(#0d6efd);
//   &:focus-visible {
//     @include ring(#0d6efd, 3px);
//     outline: none;
//   }
// }

// 7. Mixins como valores (sass:meta)

@mixin tone($c) {
  background: $c;
  color: white;
  padding: 1rem;
  border-radius: 0.5rem;
}

@mixin apply-mixin($m, $args...) {
  @include meta.apply($m, $args...);
}

.box {
  @include apply-mixin(meta.get-mixin("tone"), rebeccapurple);
}
